{"version":3,"sources":["components/Header.js","logo.svg","components/Navbar.js","utils/API.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["styles","headline","textAlign","Header","className","style","Navbar","type","placeholder","aria-label","axios","get","EmployeeTable","state","order","filteredUsers","users","API","then","results","data","console","log","setState","this","map","user","src","picture","medium","alt","name","first","last","phone","location","city","dob","age","id","value","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEMA,G,MCFS,I,MDEA,CACfC,SAAU,CACNC,UAAW,YAYAC,MARf,WACE,OACE,wBAAQC,UAAU,SAAlB,SACE,oBAAIC,MAAOL,EAAOC,SAAlB,uCEKSK,MAdf,WACE,OACI,8BACF,sBAAKF,UAAU,uDAAf,UACF,mBAAGA,UAAU,gCAAb,uBACA,uBAAMA,UAAU,cAAhB,UACE,uBAAOA,UAAU,uBAAuBG,KAAK,SAASC,YAAY,SAASC,aAAW,WACtF,wBAAQL,UAAU,oCAAoCG,KAAK,SAA3D,6B,iDCLW,EACH,WACR,OAAOG,IAAMC,IAJD,kDCuEDC,E,4MA9DXC,MAAQ,CACJC,MAAO,aACPC,cAAe,I,EAGnBC,MAAQ,G,kEAOa,IAAD,OAChBC,IAAeC,MAAK,SAAAC,GAChB,EAAKH,MAAQG,EAAQC,KAAKD,QAC1BE,QAAQC,IAAI,cAAe,EAAKN,OAChC,EAAKO,SAAS,CACVR,cAAe,EAAKC,a,+BAM5B,OACI,8BACI,wBAAOZ,UAAU,QAAjB,UACI,gCACI,+BACI,sCACA,sCACA,uCACA,0CACA,0CAGR,gCACCoB,KAAKX,MAAME,cAAcU,KAAI,SAAAC,GAC1B,OACI,+BACI,6BAAI,qBAAKC,IAAKD,EAAKE,QAAQC,OAAQC,IAAI,gBACvC,6BAAKJ,EAAKK,KAAKC,MAAQ,IAAMN,EAAKK,KAAKE,OACvC,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKS,SAASC,OACnB,6BAAKV,EAAKW,IAAIC,QALTZ,EAAKa,GAAGC,qB,GAvCjBC,aCMbC,MAVf,WACE,OACA,gCACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e15b2763.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\nheadline: {\n    textAlign: 'center', \n  }\n}\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1 style={styles.headline}>Employee Stardirectory</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nfunction Navbar() {\n  return (\n      <div>\n    <nav className=\"navbar navbar-light bg-white justify-content-between\">\n  <a className=\"navbar-brand font-weight-bold\">Employees</a>\n  <form className=\"form-inline\">\n    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n    <button className=\"btn btn-outline-dark my-2 my-sm-0\" type=\"submit\">Search</button>\n  </form>\n</nav>\n</div>\n  );\n}\n\nexport default Navbar;","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=100&nat=us\";\n\nexport default {\n  getUsers: function() {\n    return axios.get(BASEURL);\n  }\n};\n","import React, { Component} from \"react\";\nimport API from \"../utils/API\";\n\n// Hooks Example\n// function EmpTable () {\n//     const [getUserList, setUserList] = useState([])\n//     setUserList(results.data.resutlts)\n//     getUserList()\n// }\n\nclass EmployeeTable extends Component {\n    state = {\n        order: \"descending\",\n        filteredUsers: [],\n    }\n\n    users = [];\n\n    // create a handleSort function that sorts the data list on click\n    // if this.state.order = descendging, make it ascending and vise versa\n\n    // if this.state.order is asc || dec, have a functino that alphabatizes the data based on last name (google alphabatize elements in an array)\n\n    componentDidMount() {\n        API.getUsers().then(results => {\n            this.users = results.data.results;\n            console.log('this.users:', this.users)\n            this.setState({\n                filteredUsers: this.users\n            });   \n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Star</th>\n                            <th>Name</th>\n                            <th>Phone</th>\n                            <th>Location</th>\n                            <th>Age</th>\n                        </tr> \n                    </thead>\n                    <tbody>\n                    {this.state.filteredUsers.map(user => { \n                        return (\n                            <tr key={user.id.value}>\n                                <td><img src={user.picture.medium} alt='Employees'></img></td>\n                                <td>{user.name.first + \" \" + user.name.last}</td>\n                                <td>{user.phone}</td>\n                                <td>{user.location.city}</td>\n                                <td>{user.dob.age}</td>\n                            </tr>\n                            )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n};\n\n/* this.state.users.map(user => {\n                        return (\n                            <UserRow \n                                lastName={user.name.last} \n                                phone={user.phone}\n                            />)\n                    })}*/\n\nexport default EmployeeTable;","import logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport EmployeeTable from \"./components/EmployeeTable\";\n\nfunction App() {\n  return (\n  <div>\n  <Header />\n  <Navbar />\n  <EmployeeTable />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}